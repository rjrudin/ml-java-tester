plugins {
    id 'java'
    id 'net.saliman.properties' version '1.5.1'
    id 'com.marklogic.ml-gradle' version '4.1.1'
}

sourceCompatibility = "8"
targetCompatibility = "8"

repositories {
    mavenCentral()

    // Needed for ml-app-deployer
    jcenter()
}

dependencies {
    implementation('com.marklogic:marklogic-client-api:5.4.0') {
        // This isn't available via mavenCentral with its 2.3 coordinates, so it's excluded
        // and then depended on below via its 2.5 coordinates
        exclude module: "okhttp-digest"
    }
    implementation 'io.github.rburgst:okhttp-digest:2.5'

    implementation 'com.marklogic:marklogic-xcc:10.0.6.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.1'

    // Needed for finding host names in the cluster
    implementation ('com.marklogic:ml-app-deployer:4.1.1') {
        exclude module: "marklogic-client-api"
    }

    // Needed to delete large collections
    implementation ('com.marklogic:marklogic-data-movement-components:2.2.1') {
        exclude module: "marklogic-client-api"
    }

    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'org.slf4j:jcl-over-slf4j:1.7.30'
    implementation 'org.slf4j:slf4j-api:1.7.30'
}

task testPerformance(type: JavaExec) {
    main = "org.example.PerformanceTester"
    classpath = sourceSets.main.runtimeClasspath
    args = [
            "host=" + mlHost,
            "restPort=" + mlRestPort,
            "xdbcPort=" + mlXdbcPort,
            "username=" + mlUsername,
            "password=" + mlPassword,
            "batchCount=" + batchCount,
            "batchSize=" + batchSize,
            "iterations=" + iterations,
            "threadCount=" + threadCount,
            "simpleBulkService=" + simpleBulkService,
            "testXcc=" + testXcc,
            "testDmsdk=" + testDmsdk,
            "testBulk=" + testBulk,
            "documentElements=" + documentElements
    ]
    maxHeapSize = project.property("maxHeapSize")
}
